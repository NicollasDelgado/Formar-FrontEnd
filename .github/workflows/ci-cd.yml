name: CI/CD Pipeline with Multi-Host SSH

# Define quando o workflow será disparado
on:
  push:
    branches:       
      - main

# Variáveis de ambiente globais
env:
  PROJECT_NAME: formar-frontend
  PRODUCTION_DEPLOY_PATH: /home/deploy/production/formar-frontend

jobs:
  # Job para testes e validação de código
  code-validation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
      
      - name: Configurar ambiente
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'      

  # Job para build e deploy via SSH
  deploy:
    needs: code-validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
            
      - name: Configurar SSH para Produção
        if: github.ref == 'refs/heads/main'
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_PRODUCTION }}
            
      - name: Configurar known_hosts para Produção
        if: github.ref == 'refs/heads/main'
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_HOST_PRODUCTION }} >> ~/.ssh/known_hosts        
      
      - name: Deploy para Produção
        if: github.ref == 'refs/heads/main'
        run: |
          ssh ${{ secrets.SERVER_USER_PRODUCTION }}@${{ secrets.SERVER_HOST_PRODUCTION }} "
            mkdir -p ${{ env.PRODUCTION_DEPLOY_PATH }}
            cd ${{ env.PRODUCTION_DEPLOY_PATH }}
          "         
          rsync -avz \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='.env' \
            . "${{ secrets.SERVER_USER_PRODUCTION }}@${{ secrets.SERVER_HOST_PRODUCTION }}:${{ env.PRODUCTION_DEPLOY_PATH }}/"           
          
          ssh ${{ secrets.SERVER_USER_PRODUCTION }}@${{ secrets.SERVER_HOST_PRODUCTION }} "
            cd ${{ env.PRODUCTION_DEPLOY_PATH }}
            ./release.sh
          "